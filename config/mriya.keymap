/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <150>;
};

&mt {
    quick_tap_ms = <200>;
    flavor = "tap-preferred";
};

/ {
    macros {
        cmd_space: cmd_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp SPACE>;
            label = "CMD_SPACE";
        };

        cyr_at: cyr_at {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp AT &kp LG(SPACE)>;
            label = "CYR_AT";
        };

        cyr_hash: cyr_hash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp HASH &kp LG(SPACE)>;
            label = "CYR_HASH";
        };

        cyr_pipe: cyr_pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp PIPE &kp LG(SPACE)>;
            label = "CYR_PIPE";
        };
    };

    combos {
        compatible = "zmk,combos";

        tog_def {
            bindings = <&tog 0>;
            key-positions = <47 46>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESCAPE          &kp N1  &kp N2    &kp N3       &kp N4           &kp N5       &kp N6     &kp N7          &kp N8       &kp N9                          &kp N0    &kp MINUS
  &kp GRAVE           &kp Q   &kp W     &kp E        &kp R            &kp T        &kp Y      &kp U           &kp I        &kp O                           &kp P     &kp LBKT
  &kp LCTRL           &kp A   &kp S     &kp D        &kp F            &kp G        &kp H      &kp J           &kp K        &kp L                           &kp SEMI  &mt RCTRL SQT
  &mt LALT LG(SPACE)  &kp Z   &kp X     &kp C        &kp V            &kp B        &kp N      &kp M           &kp COMMA    &kp DOT                         &kp FSLH  &mt RALT BSLH
                              &kp LGUI  &lt 2 ENTER  &mt LSHFT SPACE  &lt 1 TAB    &lt 1 ESC  &mt RSHFT BSPC  &lt 2 ENTER  &mt LS(LA(LGUI)) RIGHT_BRACKET
            >;
        };

        lower_layer {
            bindings = <
  &trans           &trans        &trans        &trans        &trans     &trans       &trans          &trans           &trans             &trans    &trans    &trans
  &kp UNDER        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N4     &kp N5       &kp NUMBER_6    &kp N7           &kp N8             &kp N9    &kp N0    &kp RIGHT_BRACKET
  &mt LCTRL EQUAL  &kp EXCL      &kp AT        &kp HASH      &kp DLLR   &kp PRCNT    &kp CARET       &kp AMPS         &kp STAR           &kp LPAR  &kp RPAR  &mt RCTRL MINUS
  &mt LALT PLUS    &kp N1        &cyr_at       &cyr_hash     &cyr_pipe  &kp EQUAL    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LS(LA(MINUS))  &kp N9    &to 2     &kp UNDERSCORE
                                 &trans        &lt 3 RET     &trans     &trans       &trans          &trans           &lt 3 RET          &trans
            >;
        };

        raise_layer {
            bindings = <
  &trans           &trans           &trans     &trans     &trans     &trans          &trans        &trans            &trans             &trans           &trans           &trans
  &kp ESC          &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &trans        &kp C_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PAUSE_BREAK  &kp AT_SIGN
  &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp LEFT      &kp DOWN          &kp UP             &kp RIGHT        &kp SCROLLLOCK   &mt RCTRL K_APP
  &kp LG(SPACE)    &kp KP_N0        &trans     &trans     &trans     &kp KP_DOT      &kp CAPSLOCK  &kp C_PLAY_PAUSE  &kp C_PREV         &kp C_NEXT       &trans           &to 0
                                    &trans     &trans     &trans     &lt 3 TAB       &lt 3 ESC     &trans            &trans             &trans
            >;
        };

        adjust_layer {
            bindings = <
  &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
